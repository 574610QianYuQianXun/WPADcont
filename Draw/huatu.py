import matplotlib.pyplot as plt
# 数据
# 传统的范数裁剪结果
traditional_test = [98.09, 98.12, 98.09, 98.11, 98.11, 98.11, 98.1, 98.1, 98.1, 98.1, 98.1, 98.1, 98.1, 98.1, 98.11, 98.11, 98.1, 98.1, 98.11, 98.12, 98.1, 98.11, 98.11, 98.11, 98.11, 98.11, 98.12, 98.11, 98.1, 98.11, 98.12, 98.12, 98.13, 98.13, 98.13, 98.14, 98.14, 98.15, 98.16, 98.16, 98.16, 98.16, 98.16, 98.16, 98.16, 98.16, 98.15, 98.16, 98.15, 98.15, 98.15, 98.15, 98.14, 98.15, 98.14, 98.14, 98.14, 98.13, 98.14, 98.14, 98.14, 98.15, 98.14, 98.13, 98.13, 98.13, 98.16, 98.15, 98.16, 98.16, 98.14, 98.14, 98.15, 98.15, 98.17, 98.17, 98.17, 98.17, 98.15, 98.15, 98.15, 98.15, 98.15, 98.15, 98.15, 98.16, 98.16, 98.16, 98.15, 98.17, 98.17, 98.15, 98.16, 98.16, 98.16, 98.16, 98.16, 98.16, 98.16, 98.15]
traditional_backdoor = [0.0] * len(traditional_test)

# 平均聚合结果（无裁剪）
avg_test = [98.12, 98.01, 98.04, 98.1, 98.13, 98.12, 98.04, 98.08, 98.08, 98.1, 98.11, 98.16, 98.19, 98.18, 98.19, 98.2, 98.18, 98.18, 98.17, 98.16, 98.14, 98.15, 98.17, 98.15, 98.17, 98.16, 98.16, 98.2, 98.21, 98.19, 98.21, 98.22, 98.2, 98.2, 98.19, 98.2, 98.2, 98.2, 98.21, 98.22, 98.22, 98.21, 98.21, 98.21, 98.22, 98.22, 98.24, 98.25, 98.26, 98.24, 98.25, 98.22, 98.25, 98.24, 98.25, 98.23, 98.26, 98.22, 98.23, 98.23, 98.24, 98.24, 98.25, 98.25, 98.23, 98.25, 98.22, 98.23, 98.23, 98.24, 98.25, 98.28, 98.26, 98.26, 98.25, 98.24, 98.25, 98.26, 98.26, 98.25, 98.24, 98.24, 98.24, 98.23, 98.26, 98.26, 98.26, 98.25, 98.27, 98.26, 98.24, 98.27, 98.28, 98.28, 98.29, 98.28, 98.27, 98.26, 98.26, 98.26]
avg_backdoor = [0.0] * len(avg_test)

# 基于IQR的裁剪聚合结果
iqr_test = [98.09, 98.1, 98.1, 98.09, 98.09, 98.08, 98.08, 98.08, 98.1, 98.11, 98.13, 98.13, 98.12, 98.09, 98.1, 98.09, 98.12, 98.11, 98.13, 98.12, 98.12, 98.13, 98.13, 98.15, 98.15, 98.13, 98.13, 98.15, 98.15, 98.15, 98.16, 98.15, 98.15, 98.15, 98.15, 98.15, 98.15, 98.16, 98.16, 98.16, 98.16, 98.15, 98.15, 98.17, 98.18, 98.16, 98.17, 98.17, 98.17, 98.17, 98.17, 98.17, 98.17, 98.17, 98.18, 98.15, 98.14, 98.13, 98.14, 98.15, 98.16, 98.17, 98.17, 98.15, 98.16, 98.14, 98.16, 98.16, 98.16, 98.16, 98.17, 98.16, 98.13, 98.13, 98.13, 98.14, 98.16, 98.17, 98.17, 98.16, 98.13, 98.15, 98.13, 98.16, 98.16, 98.14, 98.14, 98.14, 98.14, 98.14, 98.15, 98.16, 98.16, 98.16, 98.19, 98.2, 98.19, 98.18, 98.18, 98.16]
iqr_backdoor = [0.0] * len(iqr_test)

# 生成x轴（迭代次数或epoch数）
x_traditional = list(range(1, len(traditional_test)+1))
x_avg = list(range(1, len(avg_test)+1))
x_iqr = list(range(1, len(iqr_test)+1))

# 绘图
fig, axs = plt.subplots(1, 2, figsize=(14, 5))

# 子图1：测试集准确率随迭代变化
axs[0].plot(x_traditional, traditional_test, label="Traditional Norm Clipping", marker='o', markersize=3)
axs[0].plot(x_avg, avg_test, label="Average Aggregation (No Clipping)", marker='s', markersize=3)
axs[0].plot(x_iqr, iqr_test, label="IQR-Based Clipping Aggregation", marker='^', markersize=3)
axs[0].set_xlabel("Iterations")
axs[0].set_ylabel("Test Accuracy (%)")
axs[0].set_title("Test Accuracy History")
axs[0].legend()
axs[0].grid(True)

# 子图2：后门攻击准确率随迭代变化（均为0）
axs[1].plot(x_traditional, traditional_backdoor, label="Traditional Norm Clipping", marker='o', markersize=3)
axs[1].plot(x_avg, avg_backdoor, label="Average Aggregation (No Clipping)", marker='s', markersize=3)
axs[1].plot(x_iqr, iqr_backdoor, label="IQR-Based Clipping Aggregation", marker='^', markersize=3)
axs[1].set_xlabel("Iterations")
axs[1].set_ylabel("Backdoor Attack Accuracy (%)")
axs[1].set_title("Backdoor Attack Accuracy History")
axs[1].legend()
axs[1].grid(True)

plt.tight_layout()
plt.show()
